# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18tygFaAlVjqbUa45NOHoYL_p53uD6ujD
"""

!pip install requests

import requests

def generate_webhook():
    url = "https://bfhldevapigw.healthrx.co.in/hiring/generateWebhook/PYTHON"
    data = {
        "name": "Shruti Mawalkar",
        "regNo": "0827AL221125",
        "email": "shrutimawalkar122004@gmail.com"
    }

    print("üéØ Sending request to generate webhook...")
    response = requests.post(url, json=data)
    print("‚û°Ô∏è Status Code:", response.status_code)
    print("‚û°Ô∏è Raw Response:", response.text)

    if response.status_code != 200:
        print("‚ùå Webhook generation failed.")
        return None

    try:
        return response.json()
    except ValueError:
        print("‚ùå Failed to parse JSON from response.")
        return None


def get_sql_query(reg_no):
    if int(reg_no[-1]) % 2 == 1:
        print("‚úÖ Assigned Question 1")
        return """
        SELECT
            p.AMOUNT AS SALARY,
            CONCAT(e.FIRST_NAME, ' ', e.LAST_NAME) AS NAME,
            TIMESTAMPDIFF(YEAR, e.DOB, CURDATE()) AS AGE,
            d.DEPARTMENT_NAME
        FROM PAYMENTS p
        JOIN EMPLOYEE e ON p.EMP_ID = e.EMP_ID
        JOIN DEPARTMENT d ON e.DEPARTMENT = d.DEPARTMENT_ID
        WHERE DAY(p.PAYMENT_TIME) != 1
        ORDER BY p.AMOUNT DESC
        LIMIT 1;
        """
    else:
        print("‚úÖ Assigned Question 2")
        return "SELECT * FROM your_table WHERE your_condition;"


# Submit the SQL Query to the Webhook
def submit_query(webhook_url, token, final_query):
    print("üöÄ Submitting SQL to webhook...")
    print("üîó Webhook URL:", webhook_url)
    print("üîê Token:", token)

    headers = {
        "Authorization": token,
        "Content-Type": "application/json"
    }

    payload = {"finalQuery": final_query.strip()}
    response = requests.post(webhook_url, headers=headers, json=payload)

    print("üì§ Submission Status:", response.status_code)
    print("üì® Submission Response:", response.text)


# Main Function to Tie Everything Together
def main():
    response_data = generate_webhook()
    if not response_data:
        return

    webhook = response_data.get("webhook")
    token = response_data.get("accessToken")
    reg_no = "0827AL221125"

    if not webhook or not token:
        print("‚ùå Missing webhook or token in response.")
        return

    print(f"üéØ Webhook: {webhook}")
    print(f"üéØ Token: {token}")

    query = get_sql_query(reg_no)
    submit_query(webhook, token, query)


if __name__ == "__main__":
    main()



